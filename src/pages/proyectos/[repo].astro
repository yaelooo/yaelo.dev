---
import Layout from "@layouts/Layout.astro"
import Article from "@components/Article.astro"
import Readme from "@components/Readme.astro"
import Link from "@components/Link.astro"
import Book from "@icons/Book.astro"
import Github from "@icons/Github.astro"
import Web from "@icons/Web.astro"
import { getRepository, getLanguages } from "@utils/githubApi"
import { convertDate } from "@lib/convertDate"
import { upperFirstLetter } from "@lib/firstLetter"

const { repo } = Astro.params
const { data: repoData, error: repoError } = await getRepository(`${repo}`)
const { data: languagesData, error: languagesError } = await getLanguages(`${repo}`)

if (repoError) {
  return Astro.redirect("/404")
}

if (!languagesData) {
  throw new Error("No se pudo obtener los datos de los lenguajes")
}

const totalBytesOfCode: number = Object.values(languagesData).reduce(
  (total: number, bytesOfCode: number) => total + bytesOfCode,
  0
)

const languagePercentages: [string, number][] = Object.entries(languagesData).map(
  ([language, bytesOfCode]: [string, number]) => {
    const percentage: number = (bytesOfCode / totalBytesOfCode) * 100
    return [language, percentage]
  }
)
---

<Layout
  title={upperFirstLetter(repoData?.name || "Proyecto no disponible.")}
  description={repoData?.description || "Descripción no disponible."}
>
  <Article>
    <header class="mb-2 flex flex-col gap-4 font-semibold">
      <h1>
        {repoData?.name && upperFirstLetter(repoData?.name)}
      </h1>
      <p class="font-semibold">
        {repoData?.description || "Descripción no disponible."}
      </p>
      <ul class="grid gap-4 md:grid-cols-2">
        <li>
          <span class="font-semibold">Fecha de actualización:</span>
          <span class="font-normal">
            {
              repoData?.updated_at
                ? convertDate(new Date(repoData.updated_at))
                : "Fecha no disponible"
            }
          </span>
        </li>
        <li>
          <span class="font-semibold">Fecha de creación:</span>
          <span class="font-normal">
            {
              repoData?.created_at
                ? convertDate(new Date(repoData.created_at))
                : "Fecha no disponible"
            }
          </span>
        </li>
        <li class="md:col-span-2">
          <span class="font-semibold">Lenguajes utilizados:</span>
          <span class="font-normal">
            {
              languagesError
                ? "Error al obtener los lenguajes."
                : languagesData &&
                  languagePercentages.map(([language, percentage]) => (
                    <span class="mr-2 inline-block">
                      {language}: {percentage.toFixed(1)}%
                    </span>
                  ))
            }
          </span>
        </li>
      </ul>
    </header>
    <section
      class="flex flex-col rounded-2xl border border-custom-accent/40 p-8 shadow-lg shadow-custom-accent/20"
    >
      <article>
        <header class="flex justify-between">
          <span class="flex items-center gap-2">
            <Book class="text-custom-accent" /><span>Readme</span>
          </span>
          <span class="flex gap-2">
            {
              repoData?.homepage ? (
                <Link
                  title={`Ir a la página del proyecto ${repoData?.name}`}
                  href={`${repoData?.homepage}`}
                  sr={`Ir a la página del proyecto ${repoData?.name}`}
                  isExternal
                  isCustom
                  extraClasses="flex gap-1 items-center text-current"
                >
                  <Web class="text-custom-accent" />
                  <span class="hidden sm:flex">Ver página</span>
                </Link>
              ) : null
            }
            <Link
              title={`Ir al repositorio del proyecto ${repoData?.name}`}
              href={`${repoData?.html_url}`}
              sr={`Ir al repositorio del proyecto ${repoData?.name}`}
              isExternal
              isCustom
              extraClasses="flex gap-1 items-center text-current"
            >
              <Github class="text-custom-accent" />
              <span class="hidden sm:flex">Ver código</span>
            </Link>
          </span>
        </header>
        <hr class="mt-1 rounded-2xl border-custom-accent/40 shadow-lg shadow-custom-accent/20" />
        <Readme repo={`${repoData?.name}`} />
      </article>
    </section>
  </Article>
</Layout>
